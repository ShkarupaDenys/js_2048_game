{"version":3,"sources":["scripts/main.js"],"names":["newMatrix","button","document","querySelector","messageWin","messageLose","size","score","isWin","matrix","startGame","messageStart","classList","contains","replace","innerText","add","resetGame","addTileToScreen","addNumber","renderTile","addEventListener","move","hasMessageLose","hasMessageWin","findEmptyTile","randomY","randomX","Math","random","e","key","moveLeft","moveRight","moveDown","moveUp","row","column","remove","canMove","removeEventListener","reverseRows","forEach","reverse","checkRows","map","newRow","filter","cell","index","splice","concat","Array","length","fill","transposeMatrix","emptyTiles","rowIndex","columnIndex","push","floor","gameScore","fieldRows","querySelectorAll","element","children","textContent","className","_","colIndex","checkColumns","i","some","j"],"mappings":"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","file":"main.96876ee3.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('button');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nconst size = 4;\nlet score = 0;\nlet isWin = false;\nlet newMatrix;\nlet matrix = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nconst startGame = () => {\n  const messageStart = document.querySelector('.message-start');\n\n  if (button.classList.contains('start')) {\n    button.classList.replace('start', 'restart');\n    button.innerText = 'Restart';\n    messageStart.classList.add('hidden');\n  } else {\n    isWin = false;\n    resetGame();\n  }\n\n  addTileToScreen();\n  addTileToScreen();\n};\n\nconst addTileToScreen = () => {\n  addNumber();\n  renderTile();\n};\n\nconst resetGame = () => {\n  document.addEventListener('keydown', move);\n\n  score = 0;\n\n  const hasMessageLose = messageLose.classList.contains('hidden');\n  const hasMessageWin = messageLose.classList.contains('hidden');\n\n  matrix = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  if (!hasMessageLose) {\n    messageLose.classList.add('hidden');\n  }\n\n  if (!hasMessageWin) {\n    messageWin.classList.add('hidden');\n  }\n};\n\nconst addNumber = () => {\n  const [randomY, randomX] = findEmptyTile();\n\n  matrix[randomY][randomX] = Math.random() < 0.9 ? 2 : 4;\n};\n\nconst move = (e) => {\n  newMatrix = matrix;\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n\n    case 'ArrowRight':\n      moveRight();\n      break;\n\n    case 'ArrowDown':\n      moveDown();\n      break;\n\n    case 'ArrowUp':\n      moveUp();\n      break;\n\n    default:\n      return;\n  }\n\n  for (let row = 0; row < size; row++) {\n    for (let column = 0; column < size; column++) {\n      if (newMatrix[row][column] !== matrix[row][column]) {\n        matrix = newMatrix;\n        addTileToScreen();\n      }\n    }\n  }\n\n  if (isWin) {\n    messageWin.classList.remove('hidden');\n  }\n\n  const isMove = canMove();\n\n  if (!isMove) {\n    messageLose.classList.remove('hidden');\n    document.removeEventListener('keydown', move);\n  }\n};\n\nconst reverseRows = () => {\n  newMatrix.forEach(row => row.reverse());\n};\n\nconst moveLeft = () => {\n  if (!checkRows()) {\n    return;\n  }\n\n  newMatrix = newMatrix.map(row => {\n    const newRow = row.filter(cell => cell !== 0);\n\n    newRow.forEach((cell, index) => {\n      if (cell === newRow[index + 1]) {\n        newRow[index] *= 2;\n        newRow.splice(index + 1, 1);\n        score += newRow[index];\n\n        if (newRow[index] === 2048) {\n          isWin = true;\n        }\n      }\n    });\n\n    return newRow.concat(Array(size - newRow.length).fill(0));\n  });\n};\n\nconst moveRight = () => {\n  if (!checkRows()) {\n    return;\n  }\n\n  reverseRows();\n  moveLeft();\n  reverseRows();\n};\n\nconst moveDown = () => {\n  transposeMatrix();\n  moveRight();\n  transposeMatrix();\n};\n\nconst moveUp = () => {\n  transposeMatrix();\n  moveLeft();\n  transposeMatrix();\n};\n\nconst findEmptyTile = () => {\n  const emptyTiles = [];\n\n  matrix.forEach((row, rowIndex) => {\n    row.forEach((cell, columnIndex) => {\n      if (cell === 0) {\n        emptyTiles.push([rowIndex, columnIndex]);\n      }\n    });\n  });\n\n  return emptyTiles[Math.floor(Math.random() * emptyTiles.length)];\n};\n\nconst renderTile = () => {\n  const gameScore = document.querySelector('.game-score');\n  const fieldRows = document.querySelectorAll('.field-row');\n\n  for (let row = 0; row < size; row++) {\n    for (let column = 0; column < size; column++) {\n      const element = fieldRows[row].children[column];\n      const cell = matrix[row][column];\n\n      if (cell === 0) {\n        element.textContent = '';\n        element.className = 'field-cell';\n      } else {\n        element.textContent = cell;\n        element.className = `field-cell field-cell--${cell}`;\n      }\n    };\n  };\n\n  gameScore.textContent = score;\n};\n\nconst transposeMatrix = () => {\n  newMatrix = newMatrix[0]\n    .map((_, colIndex) => newMatrix.map(row => row[colIndex]));\n};\n\nconst canMove = () => {\n  if (checkRows()) {\n    return true;\n  }\n\n  transposeMatrix();\n\n  return checkColumns();\n};\n\nconst checkRows = () => {\n  for (let i = 0; i < size; i++) {\n    if (newMatrix[i].some(cell => cell === 0)\n      || newMatrix[i].some((cell, j) => cell === newMatrix[i][j + 1])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nconst checkColumns = () => {\n  for (let i = 0; i < size; i++) {\n    if (newMatrix[i].some((cell, j) => cell === newMatrix[i][j + 1])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nbutton.addEventListener('click', startGame);\n\ndocument.addEventListener('keydown', move);\n"]}